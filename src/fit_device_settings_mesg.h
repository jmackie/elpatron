////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2016 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 16.73Release
// Tag = production-akw-16.73.00-0-gef88b3f
////////////////////////////////////////////////////////////////////////////////


#if !defined(FIT_DEVICE_SETTINGS_MESG_HPP)
#define FIT_DEVICE_SETTINGS_MESG_HPP

#include "fit_mesg.h"

namespace fit
{

class DeviceSettingsMesg : public Mesg
{
public:
    DeviceSettingsMesg(void) : Mesg(Profile::MESG_DEVICE_SETTINGS)
    {
    }

    DeviceSettingsMesg(const Mesg &mesg) : Mesg(mesg)
    {
    }

    ///////////////////////////////////////////////////////////////////////
    // Returns active_time_zone field
    // Comment: Index into time zone arrays.
    ///////////////////////////////////////////////////////////////////////
    FIT_UINT8 GetActiveTimeZone(void) const
    {
        return GetFieldUINT8Value(0, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Set active_time_zone field
    // Comment: Index into time zone arrays.
    ///////////////////////////////////////////////////////////////////////
    void SetActiveTimeZone(FIT_UINT8 activeTimeZone)
    {
        SetFieldUINT8Value(0, activeTimeZone, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Returns utc_offset field
    // Comment: Offset from system time. Required to convert timestamp from system time to UTC.
    ///////////////////////////////////////////////////////////////////////
    FIT_UINT32 GetUtcOffset(void) const
    {
        return GetFieldUINT32Value(1, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Set utc_offset field
    // Comment: Offset from system time. Required to convert timestamp from system time to UTC.
    ///////////////////////////////////////////////////////////////////////
    void SetUtcOffset(FIT_UINT32 utcOffset)
    {
        SetFieldUINT32Value(1, utcOffset, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Returns number of time_offset
    ///////////////////////////////////////////////////////////////////////
    FIT_UINT8 GetNumTimeOffset(void) const
    {
        return GetFieldNumValues(2, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Returns time_offset field
    // Units: s
    // Comment: Offset from system time.
    ///////////////////////////////////////////////////////////////////////
    FIT_UINT32 GetTimeOffset(FIT_UINT8 index) const
    {
        return GetFieldUINT32Value(2, index, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Set time_offset field
    // Units: s
    // Comment: Offset from system time.
    ///////////////////////////////////////////////////////////////////////
    void SetTimeOffset(FIT_UINT8 index, FIT_UINT32 timeOffset)
    {
        SetFieldUINT32Value(2, timeOffset, index, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Returns number of time_zone_offset
    ///////////////////////////////////////////////////////////////////////
    FIT_UINT8 GetNumTimeZoneOffset(void) const
    {
        return GetFieldNumValues(5, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Returns time_zone_offset field
    // Units: hr
    // Comment: timezone offset in 1/4 hour increments
    ///////////////////////////////////////////////////////////////////////
    FIT_FLOAT32 GetTimeZoneOffset(FIT_UINT8 index) const
    {
        return GetFieldFLOAT32Value(5, index, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Set time_zone_offset field
    // Units: hr
    // Comment: timezone offset in 1/4 hour increments
    ///////////////////////////////////////////////////////////////////////
    void SetTimeZoneOffset(FIT_UINT8 index, FIT_FLOAT32 timeZoneOffset)
    {
        SetFieldFLOAT32Value(5, timeZoneOffset, index, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Returns display_orientation field
    ///////////////////////////////////////////////////////////////////////
    FIT_DISPLAY_ORIENTATION GetDisplayOrientation(void) const
    {
        return GetFieldENUMValue(55, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Set display_orientation field
    ///////////////////////////////////////////////////////////////////////
    void SetDisplayOrientation(FIT_DISPLAY_ORIENTATION displayOrientation)
    {
        SetFieldENUMValue(55, displayOrientation, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Returns mounting_side field
    ///////////////////////////////////////////////////////////////////////
    FIT_SIDE GetMountingSide(void) const
    {
        return GetFieldENUMValue(56, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Set mounting_side field
    ///////////////////////////////////////////////////////////////////////
    void SetMountingSide(FIT_SIDE mountingSide)
    {
        SetFieldENUMValue(56, mountingSide, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Returns number_of_screens field
    // Comment: Number of screens configured to display
    ///////////////////////////////////////////////////////////////////////
    FIT_UINT8 GetNumberOfScreens(void) const
    {
        return GetFieldUINT8Value(94, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Set number_of_screens field
    // Comment: Number of screens configured to display
    ///////////////////////////////////////////////////////////////////////
    void SetNumberOfScreens(FIT_UINT8 numberOfScreens)
    {
        SetFieldUINT8Value(94, numberOfScreens, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Returns smart_notification_display_orientation field
    // Comment: Smart Notification display orientation
    ///////////////////////////////////////////////////////////////////////
    FIT_DISPLAY_ORIENTATION GetSmartNotificationDisplayOrientation(void) const
    {
        return GetFieldENUMValue(95, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Set smart_notification_display_orientation field
    // Comment: Smart Notification display orientation
    ///////////////////////////////////////////////////////////////////////
    void SetSmartNotificationDisplayOrientation(FIT_DISPLAY_ORIENTATION smartNotificationDisplayOrientation)
    {
        SetFieldENUMValue(95, smartNotificationDisplayOrientation, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

};

} // namespace fit

#endif // !defined(FIT_DEVICE_SETTINGS_MESG_HPP)
