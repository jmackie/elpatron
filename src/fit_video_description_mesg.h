////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2016 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 16.73Release
// Tag = production-akw-16.73.00-0-gef88b3f
////////////////////////////////////////////////////////////////////////////////


#if !defined(FIT_VIDEO_DESCRIPTION_MESG_HPP)
#define FIT_VIDEO_DESCRIPTION_MESG_HPP

#include "fit_mesg.h"

namespace fit
{

class VideoDescriptionMesg : public Mesg
{
public:
    VideoDescriptionMesg(void) : Mesg(Profile::MESG_VIDEO_DESCRIPTION)
    {
    }

    VideoDescriptionMesg(const Mesg &mesg) : Mesg(mesg)
    {
    }

    ///////////////////////////////////////////////////////////////////////
    // Returns message_index field
    // Comment: Long descriptions will be split into multiple parts
    ///////////////////////////////////////////////////////////////////////
    FIT_MESSAGE_INDEX GetMessageIndex(void) const
    {
        return GetFieldUINT16Value(254, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Set message_index field
    // Comment: Long descriptions will be split into multiple parts
    ///////////////////////////////////////////////////////////////////////
    void SetMessageIndex(FIT_MESSAGE_INDEX messageIndex)
    {
        SetFieldUINT16Value(254, messageIndex, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Returns message_count field
    // Comment: Total number of description parts
    ///////////////////////////////////////////////////////////////////////
    FIT_UINT16 GetMessageCount(void) const
    {
        return GetFieldUINT16Value(0, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Set message_count field
    // Comment: Total number of description parts
    ///////////////////////////////////////////////////////////////////////
    void SetMessageCount(FIT_UINT16 messageCount)
    {
        SetFieldUINT16Value(0, messageCount, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Returns text field
    ///////////////////////////////////////////////////////////////////////
    FIT_WSTRING GetText(void) const
    {
        return GetFieldSTRINGValue(1, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

    ///////////////////////////////////////////////////////////////////////
    // Set text field
    ///////////////////////////////////////////////////////////////////////
    void SetText(FIT_WSTRING text)
    {
        SetFieldSTRINGValue(1, text, 0, FIT_SUBFIELD_INDEX_MAIN_FIELD);
    }

};

} // namespace fit

#endif // !defined(FIT_VIDEO_DESCRIPTION_MESG_HPP)
